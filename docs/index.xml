<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>朱亚光的博客</title>
    <link>http://example.org/</link>
    <description>Recent content on 朱亚光的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Apr 2022 08:47:52 +0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubeflow实践笔记</title>
      <link>http://example.org/posts/kubeflow%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 10 Apr 2022 08:47:52 +0800</pubDate>
      
      <guid>http://example.org/posts/kubeflow%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/</guid>
      <description>基于 Kubernetes 的云原生 AI 平台建设 提高算力资源利用  GPU 虚拟化  GPUManager 基于 GPU 驱动封装实现，用户需要对驱动的某些关键接口（如显存分配、cuda thread 创建等）进行封装劫持，在劫持过程中限制用户进程对计算资源的使用，整体方案较为轻量化、性能损耗小，自身只有 5% 的性能损耗，支持同一张卡上容器间 GPU 和显存使用隔离，保证了编码这种算力利用率不高的场景开发者可以共享 GPU，同时在同一块调试时资源不会被抢占。
训练集群算力调度  在 Kubernetes 里面使用 Job 来创建训练任务，只需要指定需要使用的GPU资源，结合消息队列，训练集群算力资源利用率可以达到满载。
资源监控  资源监控对集群编码、训练优化有关键指导作用，可以限制每个项目 GPU 总的使用量和每个用户GPU 资源分配。
kubeflow介绍 Kubeflow 是 google 开发的包含了机器学习模型开发生命周期的开源平台。 Kubeflow 由一组工具组成，这些工具解决了机器学习生命周期中的每个阶段，例如：数据探索、特征工程、特征转换、模型实验、模型训练、模型评估、模型调整、模型服务和 模型版本控制。 kubeflow 的主要属性是它被设计为在 kubernetes 之上工作，也就是说，kubeflow 利用了 kubernetes 集群提供的好处，例如容器编排和自动扩展。
Kubeflow components in the ML workflow Kubeflow user interface (UI) ![image-20220328102313469](/Users/zhuyaguang/Library/Application Support/typora-user-images/image-20220328102313469.png)
http://10.101.32.26:8080/
 Distributed training with Kubeflow pipeline https://github.com/kubeflow/examples/tree/master/FaceNet-distributed-training
Natural-Language-Processing https://github.</description>
    </item>
    
    <item>
      <title>Hugo Command</title>
      <link>http://example.org/posts/hugo-command/</link>
      <pubDate>Sun, 10 Apr 2022 08:41:30 +0800</pubDate>
      
      <guid>http://example.org/posts/hugo-command/</guid>
      <description>hugo new posts/hugo-command.md  hugo server -D  hugo --destination ./docs --buildDrafts --cleanDestinationDir </description>
    </item>
    
  </channel>
</rss>
